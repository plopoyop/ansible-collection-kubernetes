---
- name: Verify
  hosts: localhost
  connection: local
  gather_facts: true

  tasks:
    - name: "Pause for job to complete."
      ansible.builtin.pause:
        seconds: 5

    - name: "Get 'traefik' namespace info."
      kubernetes.core.k8s_info:
        kind: Namespace
        name: "ingress-traefik-controller"
      register: namespace_traefik

    - name: Assert that 'traefik' namespace is active
      ansible.builtin.assert:
        that: namespace_traefik['resources'][0]['status']['phase'] == "Active"

    - name: Get 'traefik' ingress class info.
      kubernetes.core.k8s_info:
        kind: IngressClass
        name: "traefik"
      register: ingressclass

    - name: Assert that 'traefik' ingress class is defined
      ansible.builtin.assert:
        that: ingressclass['resources'][0] is defined

    - name: Get 'traefik' service info.
      kubernetes.core.k8s_info:
        kind: Service
        name: "traefik"
        namespace: "ingress-traefik-controller"
      register: service

    - name: Assert that 'traefik' service is defined
      ansible.builtin.assert:
        that: service['resources'][0]['status']['loadBalancer']['ingress'] is defined

    - name: "Get 'redirect-to-https' middleware info."
      kubernetes.core.k8s_info:
        api_version: "traefik.io/v1alpha1"
        kind: "Middleware"
        name: "redirect-to-https"
        namespace: "ingress-traefik-controller"
      register: middleware

    - name: "Assert that 'redirect-to-https' middleware is defined"
      ansible.builtin.assert:
        that: middleware['resources'][0] is defined

    - name: "Get 'test-inflightconn' TCP middleware info."
      kubernetes.core.k8s_info:
        api_version: "traefik.io/v1alpha1"
        kind: "MiddlewareTCP"
        name: "test-inflightconn"
        namespace: "ingress-traefik-controller"
      register: middleware_tcp

    - name: "Assert that 'test-inflightconn' TCP middleware is defined"
      ansible.builtin.assert:
        that: middleware_tcp['resources'][0] is defined
